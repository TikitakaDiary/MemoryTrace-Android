apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.gms.google-services' //google login, fcm
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'

android {
    compileSdkVersion rootProject.compile_sdk_version
    buildToolsVersion rootProject.build_tools_version

    defaultConfig {
        applicationId "com.upf.memorytrace_android"
        minSdkVersion rootProject.min_sdk_version
        targetSdkVersion rootProject.target_sdk_version
        versionCode 6
        versionName "1.4.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        def addConstant = {constantName, constantValue ->
            manifestPlaceholders += [ (constantName):constantValue]
            buildConfigField "String", "${constantName}", "\"${constantValue}\""
        }
        addConstant("BASE_URL", "${getProperty("local.properties", "BASE_URL")}")
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
    }

    //java 8 for kakao login
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

def getProperty(String fileName, String key) {
    def propsFile = rootProject.file(fileName)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[key] != null) {
            return props[key]
        } else {
            print("No such property " + key + " in file " + fileName)
        }
    } else {
        print(fileName + " does not exist!")
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'

    // ViewPager2
    implementation "androidx.viewpager2:viewpager2:$viewpager2_version"
    implementation "com.google.android.material:material:1.4.0-beta01"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$gson_converter_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$http_logging_version"

    // leakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"

    // Module
    implementation project(path: ':sticker')
    implementation project(path: ':cropper')

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"

    // kakao login
    implementation "com.kakao.sdk:v2-user:$kakao_version"

    //firebase
    implementation platform("com.google.firebase:firebase-bom:$firebase_version")
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation "com.google.android.gms:play-services-auth:$firebase_auth_version" //login
    implementation 'com.google.firebase:firebase-messaging-ktx' //fcm


    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //notice open source
    implementation "com.google.android.gms:play-services-oss-licenses:$oss_version"

    // TedPermission
    implementation "gun0912.ted:tedpermission:$ted_permission_version"

}